STOP AND WAIT


CLIENT


#include<stdio.h>

#include<sys/socket.h>

#include<netinet/in.h>

#include<stdlib.h>

#include<unistd.h>

#include<string.h>

#include<arpa/inet.h>

void main()

{

int client,y=0,x,z,k=5,m=1,p;

char buffer[1024];

struct sockaddr_in servaddr;

socklen_t addrsize;

client=socket(AF_INET,SOCK_STREAM,0);

servaddr.sin_family =AF_INET;

servaddr.sin_port =9001;

servaddr.sin_addr.s_addr = INADDR_ANY;

memset(servaddr.sin_zero,'\0',sizeof(servaddr.sin_zero));

y=connect(client,(struct sockaddr*)&servaddr,sizeof(servaddr));

if(y<0)

{

printf("error in connection\n");

exit(1);

}

while(k!=0)

{

if(m<=5)

printf("sending %d\n",m);

if((m/2)==0)

strcpy(buffer,"frame");

else

{

strcpy(buffer,"error");

printf("packet loss\n");

for(p=1;p<=3;p++)

{

printf("waiting for %d seconds\n",p);

}

printf("retransmitting..\n");

strcpy(buffer,"frame");

sleep(3);

}

int x=send(client,buffer,19,0);

if(x==-1)

{

printf("error in sending\n");

exit(1);

}

else

printf("sent %d\n",m);

x=recv(client,buffer,1024,0);

if(z==-1)

{

printf("error in receiving\n");

exit(1);

}

k--;

m++;

if((strncmp(buffer,"ack",3)==0))

printf("acknowledgement received for %d..\n",m-1);

else

printf("ack not received\n");

}

close(client);

}

