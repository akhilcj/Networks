STOP AND WAIT


SERVER


#include<stdio.h>

#include<sys/socket.h>

#include<netinet/in.h>

#include<stdlib.h>

#include<unistd.h>

#include<string.h>

#include<arpa/inet.h>

void main()

{

int server,newsock,k=5,m=1,p,status;

char buffer[1024];

struct sockaddr_in server_address;

struct sockaddr_storage store;

socklen_t addrsize;


server=socket(AF_INET,SOCK_STREAM,0);

if(server<0)

{

printf("socket creation failed");

}

printf("socket created");

server_address.sin_port = 9001;

server_address.sin_family = AF_INET;

server_address.sin_addr.s_addr = INADDR_ANY;

if (bind(server,(struct sockaddr *)&server_address, sizeof(server_address)) < 0)

{

perror("Bind() on server_socket has failed\n");

}


int listen1=listen(server,5);

if(listen1<0)

{

perror("listen function failed");

exit(EXIT_FAILURE);

}

newsock=accept(server,(struct sockaddr*)&store,&addrsize);

if(newsock==-1)

{

printf("error in socket\n");

exit(1);

}

while(k!=0)

{

int y=recv(newsock,buffer,1024,0);

if(y==-1)

{

printf("error\n");

exit(1);

}

if(strncmp(buffer,"frame",5)==0)

printf("received%d succesfully\n",m);

if((m/2)==0)

strcpy(buffer,"ack");

else

{

strcpy(buffer,"kca");

printf("ack lost\n");

for(p=1;p<=3;p++)

{

printf("waiting for %d seconds\n",p);

}

printf("retransmitting ack....\n");

strcpy(buffer,"ack");

sleep(3);

}

printf("sending ack %d...\n",m);

int z=send(newsock,buffer,19,0);

if(z==-1)

{

printf("error in sending\n");

exit(1);

}

k--;

m++;

}

close(newsock);